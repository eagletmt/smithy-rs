// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    BadGatewayError(crate::error::BadGatewayError),
    BadRequestError(crate::error::BadRequestError),
    ConflictError(crate::error::ConflictError),
    ForbiddenError(crate::error::ForbiddenError),
    GatewayTimeoutError(crate::error::GatewayTimeoutError),
    InternalServerErrorError(crate::error::InternalServerErrorError),
    NotFoundError(crate::error::NotFoundError),
    TooManyRequestsError(crate::error::TooManyRequestsError),
    UnprocessableEntityError(crate::error::UnprocessableEntityError),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::BadGatewayError(inner) => inner.fmt(f),
            Error::BadRequestError(inner) => inner.fmt(f),
            Error::ConflictError(inner) => inner.fmt(f),
            Error::ForbiddenError(inner) => inner.fmt(f),
            Error::GatewayTimeoutError(inner) => inner.fmt(f),
            Error::InternalServerErrorError(inner) => inner.fmt(f),
            Error::NotFoundError(inner) => inner.fmt(f),
            Error::TooManyRequestsError(inner) => inner.fmt(f),
            Error::UnprocessableEntityError(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AcceptInputDeviceTransferError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::AcceptInputDeviceTransferError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AcceptInputDeviceTransferErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::AcceptInputDeviceTransferErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::AcceptInputDeviceTransferErrorKind::UnprocessableEntityError(
                    inner,
                ) => Error::UnprocessableEntityError(inner),
                crate::error::AcceptInputDeviceTransferErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchDeleteError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::BatchDeleteError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::BatchDeleteErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::BatchDeleteErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::BatchDeleteErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::BatchDeleteErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::BatchDeleteErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::BatchDeleteErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::BatchDeleteErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::BatchDeleteErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::BatchDeleteErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchStartError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::BatchStartError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::BatchStartErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::BatchStartErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::BatchStartErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::BatchStartErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::BatchStartErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::BatchStartErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::BatchStartErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::BatchStartErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::BatchStartErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchStopError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::BatchStopError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::BatchStopErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::BatchStopErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::BatchStopErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::BatchStopErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::BatchStopErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::BatchStopErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::BatchStopErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::BatchStopErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::BatchStopErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchUpdateScheduleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::BatchUpdateScheduleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::BatchUpdateScheduleErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::BatchUpdateScheduleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CancelInputDeviceTransferError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CancelInputDeviceTransferError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CancelInputDeviceTransferErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::CancelInputDeviceTransferErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CancelInputDeviceTransferErrorKind::UnprocessableEntityError(
                    inner,
                ) => Error::UnprocessableEntityError(inner),
                crate::error::CancelInputDeviceTransferErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreateChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateChannelErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::CreateChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreateChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreateChannelErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreateChannelErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::CreateChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateInputError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateInputError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateInputErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreateInputErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateInputErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateInputErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreateInputErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreateInputErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreateInputErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateInputSecurityGroupError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateInputSecurityGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateInputSecurityGroupErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreateInputSecurityGroupErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateInputSecurityGroupErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateInputSecurityGroupErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreateInputSecurityGroupErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::CreateInputSecurityGroupErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreateInputSecurityGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreateMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateMultiplexErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::CreateMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreateMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreateMultiplexErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreateMultiplexErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::CreateMultiplexErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateMultiplexProgramError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateMultiplexProgramError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateMultiplexProgramErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::CreateMultiplexProgramErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreatePartnerInputError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreatePartnerInputError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreatePartnerInputErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::CreatePartnerInputErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateTagsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateTagsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateTagsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::CreateTagsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::CreateTagsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::CreateTagsErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::CreateTagsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteChannelErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::DeleteChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteChannelErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteChannelErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteInputError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteInputError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteInputErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteInputErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteInputErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::DeleteInputErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteInputErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteInputErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteInputErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteInputErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteInputErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteInputSecurityGroupError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteInputSecurityGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteInputSecurityGroupErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::DeleteInputSecurityGroupErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteInputSecurityGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteMultiplexErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteMultiplexProgramError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteMultiplexProgramError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteMultiplexProgramErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteMultiplexProgramErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteReservationError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteReservationError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteReservationErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteReservationErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteReservationErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::DeleteReservationErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteReservationErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteReservationErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteReservationErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteReservationErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteReservationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteScheduleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteScheduleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteScheduleErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DeleteScheduleErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteScheduleErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteScheduleErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DeleteScheduleErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteScheduleErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteScheduleErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DeleteScheduleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteTagsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteTagsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteTagsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DeleteTagsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DeleteTagsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DeleteTagsErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteTagsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeChannelErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeChannelErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeInputError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeInputError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeInputErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeInputErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeInputErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeInputErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeInputErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeInputErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeInputErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeInputErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeInputDeviceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeInputDeviceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeInputDeviceErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeInputDeviceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeInputDeviceThumbnailError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeInputDeviceThumbnailError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeInputDeviceThumbnailErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeInputDeviceThumbnailErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeInputDeviceThumbnailErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeInputDeviceThumbnailErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeInputDeviceThumbnailErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::DescribeInputDeviceThumbnailErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeInputDeviceThumbnailErrorKind::TooManyRequestsError(
                    inner,
                ) => Error::TooManyRequestsError(inner),
                crate::error::DescribeInputDeviceThumbnailErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeInputSecurityGroupError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeInputSecurityGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeInputSecurityGroupErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::DescribeInputSecurityGroupErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeInputSecurityGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeMultiplexErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeMultiplexProgramError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeMultiplexProgramError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeMultiplexProgramErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::DescribeMultiplexProgramErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeMultiplexProgramErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeOfferingError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeOfferingError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeOfferingErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeOfferingErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeOfferingErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeOfferingErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeOfferingErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeOfferingErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeOfferingErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeOfferingErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeReservationError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeReservationError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeReservationErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeReservationErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeReservationErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeReservationErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeReservationErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeReservationErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeReservationErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeReservationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeScheduleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeScheduleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeScheduleErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::DescribeScheduleErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::DescribeScheduleErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::DescribeScheduleErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::DescribeScheduleErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::DescribeScheduleErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DescribeScheduleErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::DescribeScheduleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListChannelsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListChannelsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListChannelsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListChannelsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListChannelsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListChannelsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListChannelsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListChannelsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListChannelsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListInputDevicesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListInputDevicesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListInputDevicesErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListInputDevicesErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListInputDevicesErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListInputDevicesErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListInputDevicesErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListInputDevicesErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListInputDevicesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListInputDeviceTransfersError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListInputDeviceTransfersError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListInputDeviceTransfersErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListInputDeviceTransfersErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListInputDeviceTransfersErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListInputDeviceTransfersErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListInputDeviceTransfersErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::ListInputDeviceTransfersErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListInputDeviceTransfersErrorKind::UnprocessableEntityError(
                    inner,
                ) => Error::UnprocessableEntityError(inner),
                crate::error::ListInputDeviceTransfersErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListInputsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListInputsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListInputsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListInputsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListInputsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListInputsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListInputsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListInputsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListInputsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListInputSecurityGroupsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListInputSecurityGroupsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListInputSecurityGroupsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListInputSecurityGroupsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListMultiplexesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListMultiplexesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListMultiplexesErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListMultiplexesErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListMultiplexesErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListMultiplexesErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListMultiplexesErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListMultiplexesErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListMultiplexesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListMultiplexProgramsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListMultiplexProgramsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListMultiplexProgramsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListMultiplexProgramsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListOfferingsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListOfferingsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListOfferingsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListOfferingsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListOfferingsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListOfferingsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListOfferingsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListOfferingsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListOfferingsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListReservationsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListReservationsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListReservationsErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::ListReservationsErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListReservationsErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListReservationsErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::ListReservationsErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListReservationsErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::ListReservationsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTagsForResourceErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PurchaseOfferingError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PurchaseOfferingError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PurchaseOfferingErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::PurchaseOfferingErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::RejectInputDeviceTransferError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::RejectInputDeviceTransferError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::RejectInputDeviceTransferErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::RejectInputDeviceTransferErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::RejectInputDeviceTransferErrorKind::UnprocessableEntityError(
                    inner,
                ) => Error::UnprocessableEntityError(inner),
                crate::error::RejectInputDeviceTransferErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StartChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::StartChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::StartChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::StartChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::StartChannelErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::StartChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::StartChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::StartChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::StartChannelErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::StartChannelErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::StartChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StartMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::StartMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::StartMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::StartMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::StartMultiplexErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::StartMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::StartMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::StartMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::StartMultiplexErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::StartMultiplexErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::StartMultiplexErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StopChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::StopChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::StopChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::StopChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::StopChannelErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::StopChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::StopChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::StopChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::StopChannelErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::StopChannelErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::StopChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StopMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::StopMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::StopMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::StopMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::StopMultiplexErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::StopMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::StopMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::StopMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::StopMultiplexErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::StopMultiplexErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::StopMultiplexErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TransferInputDeviceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::TransferInputDeviceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TransferInputDeviceErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::TransferInputDeviceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateChannelErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateChannelErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateChannelErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateChannelErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateChannelErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateChannelErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateChannelErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::UpdateChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateChannelClassError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateChannelClassError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateChannelClassErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::UpdateChannelClassErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateInputError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateInputError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateInputErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateInputErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateInputErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateInputErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateInputErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateInputErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateInputErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateInputErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateInputDeviceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateInputDeviceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateInputDeviceErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::UpdateInputDeviceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateInputSecurityGroupError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateInputSecurityGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateInputSecurityGroupErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::InternalServerErrorError(
                    inner,
                ) => Error::InternalServerErrorError(inner),
                crate::error::UpdateInputSecurityGroupErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateInputSecurityGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateMultiplexError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateMultiplexError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateMultiplexErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::UpdateMultiplexErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateMultiplexProgramError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateMultiplexProgramError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateMultiplexProgramErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::UnprocessableEntityError(inner) => {
                    Error::UnprocessableEntityError(inner)
                }
                crate::error::UpdateMultiplexProgramErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateReservationError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateReservationError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateReservationErrorKind::BadGatewayError(inner) => {
                    Error::BadGatewayError(inner)
                }
                crate::error::UpdateReservationErrorKind::BadRequestError(inner) => {
                    Error::BadRequestError(inner)
                }
                crate::error::UpdateReservationErrorKind::ConflictError(inner) => {
                    Error::ConflictError(inner)
                }
                crate::error::UpdateReservationErrorKind::ForbiddenError(inner) => {
                    Error::ForbiddenError(inner)
                }
                crate::error::UpdateReservationErrorKind::GatewayTimeoutError(inner) => {
                    Error::GatewayTimeoutError(inner)
                }
                crate::error::UpdateReservationErrorKind::InternalServerErrorError(inner) => {
                    Error::InternalServerErrorError(inner)
                }
                crate::error::UpdateReservationErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UpdateReservationErrorKind::TooManyRequestsError(inner) => {
                    Error::TooManyRequestsError(inner)
                }
                crate::error::UpdateReservationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
